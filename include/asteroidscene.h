#ifndef ASTEROIDSCENE_H
#define ASTEROIDSCENE_H

#include <SDL.h>
#include "gameentity.h"
#include <vector>
#include <memory>
#include <ngl/Camera.h>
#include <ngl/Light.h>
#include "player.h"
#include "emmiter.h"
#include "terrain.h"

class AsteroidScene
{
    public:
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief ctor this will have a valid OpenGL context so we can create gl stuff
        //----------------------------------------------------------------------------------------------------------------------
        AsteroidScene();
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief dtor used to remove any NGL stuff created
        //----------------------------------------------------------------------------------------------------------------------
        ~AsteroidScene();
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief resize our screen and set the camera aspect ratio
        /// @param[in] _w the new width
        /// @param[in] _h the new height
        //----------------------------------------------------------------------------------------------------------------------
        void resize(int _w, int _h);
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief handle incoming SDL events and distribute them among game objects
        /// @param[in] _event the input event
        //----------------------------------------------------------------------------------------------------------------------
        int eventHandler(SDL_Event& _event);
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief update all game objects
        /// @param[in] _timestep the time between updates
        //----------------------------------------------------------------------------------------------------------------------
        int updateHandler(double _timestep);
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief draw the scene
        //----------------------------------------------------------------------------------------------------------------------
        void draw();
    private:
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief array of game entity objects in the scene, accessed through pointers because i'm clearly a bit dumb
        //----------------------------------------------------------------------------------------------------------------------
        //std::vector<std::shared_ptr<GameEntity>> m_gameEntities;

        Player* m_player;
        Emmiter* m_emmiter;
        //Terrain* m_terrain;

        //----------------------------------------------------------------------------------------------------------------------
        /// @brief a simple light use to illuminate the screen
        //----------------------------------------------------------------------------------------------------------------------
        //ngl::Light *m_light;
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief Our Camera
        //----------------------------------------------------------------------------------------------------------------------
        ngl::Camera *m_cam;

};

#endif // ASTEROIDSCENE_H
