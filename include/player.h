#ifndef PLAYER_H
#define PLAYER_H

//----------------------------------------------------------------------------------------------------------------------
/// This is a derived class, the event, update, draw
/// functions are to be refefined in the derived class.
//----------------------------------------------------------------------------------------------------------------------

#include <vector>
#include "gameentity.h"

class Player: public GameEntity
{
    public:
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief ctor
        //----------------------------------------------------------------------------------------------------------------------
        Player(ngl::Camera* _cam);
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief dtor
        //----------------------------------------------------------------------------------------------------------------------
        ~Player();
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief handle events to this game entity object
        //----------------------------------------------------------------------------------------------------------------------
        int event(SDL_Event& _event);
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief update this game entity object
        //----------------------------------------------------------------------------------------------------------------------
        int update(double _timestep);
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief draw this game entity object
        //----------------------------------------------------------------------------------------------------------------------
        void draw();
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief fire two bullets
        //----------------------------------------------------------------------------------------------------------------------
        void fire();

        inline int getNumOfBullets(){return m_bullets.size();}

        inline ngl::Vec3 getBulletPos(int _index){return m_bullets[_index]->getPos();}


        inline void killBullet(int _index){m_bullets.erase(m_bullets.begin()+_index);}


    private:

        bool firing;
        int keyX, keyY, firingWait;
        double DOT_VEL, lastFired;
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief array of game entity objects to store the bullets
        //----------------------------------------------------------------------------------------------------------------------
        std::vector<std::shared_ptr<GameEntity>> m_bullets;
};

#endif // PLAYER_H
