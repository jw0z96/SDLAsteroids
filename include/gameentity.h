#ifndef GAMEENTITY_H
#define GAMEENTITY_H

//----------------------------------------------------------------------------------------------------------------------
/// This is a base class, the event, update, draw
/// functions are to be refefined in the derived class.
//----------------------------------------------------------------------------------------------------------------------

#include <iostream>
#include <SDL.h>
#include <ngl/Camera.h>
#include <ngl/Transformation.h>

class GameEntity
{
    public:
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief ctor
        //----------------------------------------------------------------------------------------------------------------------
        GameEntity();
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief dtor
        //----------------------------------------------------------------------------------------------------------------------
        virtual ~GameEntity();
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief handle events to this game entity object
        //----------------------------------------------------------------------------------------------------------------------
        virtual int event(SDL_Event& _event);
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief update this game entity object
        //----------------------------------------------------------------------------------------------------------------------
        virtual int update(double _timestep);
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief draw this game entity object
        //----------------------------------------------------------------------------------------------------------------------
        virtual void draw();

        inline ngl::Vec3 getPos(){return m_modelPos;}

    protected:
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief the model position
        //----------------------------------------------------------------------------------------------------------------------
        ngl::Vec3 m_modelPos;
        ngl::Vec3 m_modelRot;
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief the model velocity?
        //----------------------------------------------------------------------------------------------------------------------
        ngl::Vec3 m_modelVel;
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief transformation stack for the gl transformations etc
        //----------------------------------------------------------------------------------------------------------------------
        ngl::Transformation m_transform;
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief string name
        //----------------------------------------------------------------------------------------------------------------------
        std::string m_name;
        //----------------------------------------------------------------------------------------------------------------------
        /// @brief ptr to the scene camera
        //----------------------------------------------------------------------------------------------------------------------
        ngl::Camera* m_cam;
};

#endif // GAMEENTITY_H
